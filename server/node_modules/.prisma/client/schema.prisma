generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  type      UserType
  school    String?
  createdAt DateTime @default(now())

  // back-relations
  registrations Registration[]
  diplomas      Diploma[]
  winners       Winner[] // <— Faltaba esta relación de vuelta
}

enum UserType {
  INTERNAL
  EXTERNAL
}

model Activity {
  id          Int          @id @default(autoincrement())
  kind        ActivityKind
  title       String
  description String?
  date        DateTime
  capacity    Int
  createdAt   DateTime     @default(now())

  // back-relations
  registrations Registration[]
  winners       Winner[]
  diplomas      Diploma[] // <— Faltaba esta relación de vuelta
}

enum ActivityKind {
  TALLER
  COMPETENCIA
}

model Registration {
  id         Int         @id @default(autoincrement())
  user       User        @relation(fields: [userId], references: [id])
  userId     Int
  activity   Activity    @relation(fields: [activityId], references: [id])
  activityId Int
  qrCodePath String?
  status     RegStatus   @default(PENDING)
  createdAt  DateTime    @default(now())
  attendance Attendance?
}

enum RegStatus {
  PENDING
  CONFIRMED
  CHECKED_IN
}

model Attendance {
  id             Int          @id @default(autoincrement())
  registration   Registration @relation(fields: [registrationId], references: [id])
  registrationId Int          @unique
  checkinAt      DateTime     @default(now())
}

model Winner {
  id          Int      @id @default(autoincrement())
  activity    Activity @relation(fields: [activityId], references: [id])
  activityId  Int
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  place       Int
  description String?
  photoUrl    String?
  createdAt   DateTime @default(now())
}

model Diploma {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  activity   Activity @relation(fields: [activityId], references: [id])
  activityId Int
  pdfPath    String
  createdAt  DateTime @default(now())
}
