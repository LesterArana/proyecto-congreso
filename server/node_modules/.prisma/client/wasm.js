
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ActivityScalarFieldEnum = {
  id: 'id',
  kind: 'kind',
  title: 'title',
  description: 'description',
  date: 'date',
  capacity: 'capacity',
  createdAt: 'createdAt'
};

exports.Prisma.AttendanceScalarFieldEnum = {
  id: 'id',
  registrationId: 'registrationId',
  checkinAt: 'checkinAt'
};

exports.Prisma.DiplomaScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  activityId: 'activityId',
  pdfPath: 'pdfPath',
  createdAt: 'createdAt'
};

exports.Prisma.RegistrationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  activityId: 'activityId',
  qrCodePath: 'qrCodePath',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  type: 'type',
  school: 'school',
  phone: 'phone',
  createdAt: 'createdAt'
};

exports.Prisma.WinnerScalarFieldEnum = {
  id: 'id',
  activityId: 'activityId',
  userId: 'userId',
  place: 'place',
  description: 'description',
  photoUrl: 'photoUrl',
  createdAt: 'createdAt'
};

exports.Prisma.AdminUserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.activityOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description'
};

exports.Prisma.diplomaOrderByRelevanceFieldEnum = {
  pdfPath: 'pdfPath'
};

exports.Prisma.registrationOrderByRelevanceFieldEnum = {
  qrCodePath: 'qrCodePath'
};

exports.Prisma.userOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  school: 'school',
  phone: 'phone'
};

exports.Prisma.winnerOrderByRelevanceFieldEnum = {
  description: 'description',
  photoUrl: 'photoUrl'
};

exports.Prisma.AdminUserOrderByRelevanceFieldEnum = {
  email: 'email',
  password: 'password'
};
exports.activity_kind = exports.$Enums.activity_kind = {
  TALLER: 'TALLER',
  COMPETENCIA: 'COMPETENCIA'
};

exports.user_type = exports.$Enums.user_type = {
  INTERNAL: 'INTERNAL',
  EXTERNAL: 'EXTERNAL'
};

exports.registration_status = exports.$Enums.registration_status = {
  PENDING: 'PENDING',
  CONFIRMED: 'CONFIRMED',
  CHECKED_IN: 'CHECKED_IN'
};

exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  STAFF: 'STAFF'
};

exports.Prisma.ModelName = {
  activity: 'activity',
  attendance: 'attendance',
  diploma: 'diploma',
  registration: 'registration',
  user: 'user',
  winner: 'winner',
  AdminUser: 'AdminUser'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\HOME\\Desktop\\PROYECTO PROGRA SEMINARIO\\proyectosem\\server\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\HOME\\Desktop\\PROYECTO PROGRA SEMINARIO\\proyectosem\\server\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// server/prisma/schema.prisma\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel activity {\n  id           Int            @id @default(autoincrement())\n  kind         activity_kind\n  title        String\n  description  String?\n  date         DateTime\n  capacity     Int\n  createdAt    DateTime       @default(now())\n  registration registration[]\n}\n\nmodel attendance {\n  id             Int          @id @default(autoincrement())\n  registrationId Int          @unique(map: \"Attendance_registrationId_key\")\n  checkinAt      DateTime     @default(now())\n  registration   registration @relation(fields: [registrationId], references: [id], map: \"Attendance_registrationId_fkey\")\n}\n\nmodel diploma {\n  id         Int      @id @default(autoincrement())\n  userId     Int\n  activityId Int\n  pdfPath    String\n  createdAt  DateTime @default(now())\n}\n\nmodel registration {\n  id         Int                 @id @default(autoincrement())\n  userId     Int\n  activityId Int\n  qrCodePath String?\n  status     registration_status @default(PENDING)\n  createdAt  DateTime            @default(now())\n  attendance attendance?\n  activity   activity            @relation(fields: [activityId], references: [id], map: \"Registration_activityId_fkey\")\n  user       user                @relation(fields: [userId], references: [id], map: \"Registration_userId_fkey\")\n\n  @@index([activityId], map: \"Registration_activityId_fkey\")\n  @@index([userId], map: \"Registration_userId_fkey\")\n}\n\nmodel user {\n  id           Int            @id @default(autoincrement())\n  name         String\n  email        String         @unique(map: \"User_email_key\")\n  type         user_type      @default(INTERNAL) // <= importante\n  school       String?\n  phone        String?\n  createdAt    DateTime       @default(now())\n  registration registration[]\n}\n\nmodel winner {\n  id          Int      @id @default(autoincrement())\n  activityId  Int\n  userId      Int\n  place       Int\n  description String?\n  photoUrl    String?\n  createdAt   DateTime @default(now())\n}\n\nenum activity_kind {\n  TALLER\n  COMPETENCIA\n}\n\nenum user_type {\n  INTERNAL\n  EXTERNAL\n}\n\nenum registration_status {\n  PENDING\n  CONFIRMED\n  CHECKED_IN\n}\n\nenum Role {\n  ADMIN\n  STAFF\n}\n\nmodel AdminUser {\n  id        Int      @id @default(autoincrement())\n  email     String   @unique\n  password  String // hash bcrypt\n  role      Role     @default(ADMIN)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n",
  "inlineSchemaHash": "475e96c4d6fc57309cd3eebe76bd75aaedfba1c20e02888f95b89a4925730c61",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"activity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"kind\",\"kind\":\"enum\",\"type\":\"activity_kind\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"registration\",\"kind\":\"object\",\"type\":\"registration\",\"relationName\":\"activityToregistration\"}],\"dbName\":null},\"attendance\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"registrationId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"checkinAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"registration\",\"kind\":\"object\",\"type\":\"registration\",\"relationName\":\"attendanceToregistration\"}],\"dbName\":null},\"diploma\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"activityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"pdfPath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"registration\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"activityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"qrCodePath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"registration_status\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"attendance\",\"kind\":\"object\",\"type\":\"attendance\",\"relationName\":\"attendanceToregistration\"},{\"name\":\"activity\",\"kind\":\"object\",\"type\":\"activity\",\"relationName\":\"activityToregistration\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"user\",\"relationName\":\"registrationTouser\"}],\"dbName\":null},\"user\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"user_type\"},{\"name\":\"school\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"registration\",\"kind\":\"object\",\"type\":\"registration\",\"relationName\":\"registrationTouser\"}],\"dbName\":null},\"winner\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"activityId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"place\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"photoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AdminUser\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

